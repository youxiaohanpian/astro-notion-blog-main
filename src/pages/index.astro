---
import Layout from '../layouts/Layout.astro';
import { getAllPosts } from '../lib/notion/client';
import { getTagLink } from '../lib/blog-helpers';
import type { Post } from '../lib/interfaces';

const posts = await getAllPosts();
const latestPosts = posts.slice(0, 6); // 只显示最新的6篇日志
const allTags = [...new Set(posts.flatMap((post: Post) => post.Tags.map(tag => tag.name)))];
---

<Layout 
  title="AI233 - 个人博客" 
  description="欢迎来到我的个人博客，这里记录着我的技术探索和思考。"
  ogImage="/og-image.png"
  path="/"
  hideSidebar={true}
  hideHeader={true}
>
  <div class="home-page">
    <!-- 英雄区域 -->
    <section class="hero">
      <div class="hero-content">
        <h1 class="hero-title">Explore The Infinite Possibilities</h1>
        <p class="hero-subtitle">探索、创造、分享</p>
        <a href="/blog" class="cta-button">
          浏览所有日志
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <line x1="5" y1="12" x2="19" y2="12"></line>
            <polyline points="12 5 19 12 12 19"></polyline>
          </svg>
        </a>
      </div>
      <div class="video-loading-container">
        <div class="video-loading-spinner"></div>
      </div>
      <video 
        class="hero-video" 
        poster="/banner-poster.jpg" 
        autoplay 
        muted 
        loop 
        playsinline
        webkit-playsinline
        x5-playsinline
        x5-video-player-type="h5"
        x5-video-player-fullscreen="true"
        preload="auto"
      >
        <source src="/banner.mp4" type="video/mp4">
        <source src="/banner.webm" type="video/webm">
        <source src="/banner.ogv" type="video/ogg">
        <p>您的浏览器不支持HTML5视频。<a href="/banner.mp4">下载视频</a>观看。</p>
      </video>
      <div class="hero-overlay"></div>
    </section>

    <!-- 内容区域 -->
    <div class="content-area">
      <!-- 关于我 -->
      <section class="content-section about">
        <div class="glass-container">
          <h2>「云端邮局」星际广播</h2>
          <p>🎨 欢迎收听第 233 号飞船站传来的讯息</p>
          <p>🤖 由设计师 Tia 改造的 Notion 星际飞船日志舱</p>
          <p>🚀 设计生存指南 / AI魔法咒语 / 以及如何在数字宇宙避免被 BUG 外星人绑架的实战手册 </p>
        </div>
      </section>

      <!-- 最新日志 -->
      <section class="content-section latest-posts">
        <div class="glass-container">
          <h2>最新日志</h2>
          <div class="posts-grid">
            {latestPosts.map((post: Post) => (
              <article class="post-card">
                <a href={`/posts/${post.Slug}`}>
                  <h3>{post.Title}</h3>
                  <p class="post-excerpt">{post.Excerpt}</p>
                  <div class="post-meta">
                    <span class="post-date">{new Date(post.Date).toLocaleDateString()}</span>
                    <span class="post-categories">
                      {post.Tags.map(tag => (
                        <span class="category-tag">{tag.name}</span>
                      ))}
                    </span>
                  </div>
                </a>
              </article>
            ))}
          </div>
          <div class="view-more">
            <a href="/blog" class="cta-button">浏览所有日志
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <line x1="5" y1="12" x2="19" y2="12"></line>
                <polyline points="12 5 19 12 12 19"></polyline>
              </svg>
            </a>
          </div>
        </div>
      </section>

      <!-- 标签云 -->
      <section class="content-section tags-section">
        <div class="glass-container">
          <h2>标签</h2>
          <div class="tag-cloud">
            {allTags.map(tag => (
              <a href={getTagLink(tag)} class="tag">{tag}</a>
            ))}
          </div>
        </div>
      </section>
    </div>
  </div>
</Layout>

<style>
  :root {
    --content-max-width: 1200px;
    --font-size-base: 18px;
    --font-family-english: 'Segoe UI', -apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    --primary-color: #252525;
    --secondary-color: #8E54E9;
    --glass-background: rgba(20, 20, 30, 0.5);
    --glass-border: rgba(255, 255, 255, 0.1);
    --glass-highlight: rgba(255, 255, 255, 0.15);
    --text-lighter: rgba(255, 255, 255, 0.9);
    background-color: #000;
  }

  /* 页面容器 */
  .home-page {
    width: 100%;
    margin: 0;
    padding: 0;
    font-size: var(--font-size-base);
    font-family: var(--font-family-english), "Microsoft YaHei", "微软雅黑", sans-serif;
    overflow-x: hidden;
    position: relative;
    min-height: 100vh;
    color: #ffffff;
  }

  /* 英雄区域 */
  .hero {
    position: relative;
    width: 100%;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    color: #fff;
    overflow: hidden;
  }

  /* 视频背景 */
  .hero-video {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: -2;
    opacity: 0;
    transition: opacity 1s ease;
  }

  .hero-video.loaded {
    opacity: 1;
  }

  /* 遮罩层 - 增强对比度 */
  .hero-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* 这里不要加background，会有色块不好看 */
    z-index: -1;
  }

  /* 英雄区域内容 */
  .hero-content {
    max-width: 800px;
    padding: 2rem;
    position: relative;
    z-index: 5;
  }

  /* 英雄区域标题 - 增强阴影 */
  .hero-title {
    font-size: 3.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    color: #ffffff;
    text-shadow: 0 2px 15px rgba(0, 0, 0, 0.5), 0 0 30px rgba(0, 0, 0, 0.3); /* 双层阴影效果 */
    animation: fadeInUp 1s ease-out;
  }

  .hero-subtitle {
    font-size: 1.5rem;
    margin-bottom: 2rem;
    color: #ffffff;
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5), 0 0 20px rgba(0, 0, 0, 0.3); /* 双层阴影效果 */
    animation: fadeInUp 1s ease-out 0.2s backwards;
  }

  /* 水晶按钮样式 - 恢复水晶感觉 */
  .cta-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.8rem 1.8rem;
    background: rgba(255, 255, 255, 0.15); /* 恢复水晶感觉的透明度 */
    backdrop-filter: blur(15px); /* 增强模糊效果 */
    -webkit-backdrop-filter: blur(15px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 30px;
    color: #ffffff; /* 保持文字为纯白色，增强可见度 */
    font-size: 1rem;
    font-weight: 600; /* 增加字重 */
    text-decoration: none;
    transition: all 0.3s ease;
    animation: fadeInUp 1s ease-out 0.4s backwards;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    cursor: pointer;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.6); /* 增强文字阴影 */
  }

  .cta-button:hover {
    background: rgba(255, 255, 255, 0.25); /* 恢复悬停时的水晶效果 */
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(255, 255, 255, 0.5); /* 增强边框可见度 */
  }

  /* 内容区域 - 增强背景渐变 */
  .content-area {
    position: relative;
    z-index: 2;
    padding-bottom: 4rem;
   /* 这里不要加background，会有色块，不好看 */
  }

  /* 内容部分通用样式 */
  .content-section {
    padding: 2.5rem 0;
    text-align: center;
  }

  /* 磨砂玻璃容器 - 增强对比度 */
  .glass-container {
    max-width: var(--content-max-width);
    margin: 0 auto;
    padding: 1.5rem;
    background: rgba(15, 15, 25, 0.55); /* 我喜欢的颜色强度，请勿随意修改 */
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border-radius: 16px;
    border: 1px solid rgba(255, 255, 255, 0.05); /* 增强边框可见度 */
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4); /* 增强阴影 */
  }

  /* 内容标题 */
  .content-section h2 {
    font-size: 2.2rem;
    margin-top: 0.5rem;
    margin-bottom: 1.5rem;
    color: #ffffff;
    text-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
  }

  /* 关于我部分 */
  .about p {
    font-size: 1.1rem;
    line-height: 1.6;
    color: #ffffff99;
    max-width: 800px;
    margin: 0 auto;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  }

  /* 最新文章部分 - 恢复水晶感 */
  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    margin: 2rem 0;
  }

  .post-card {
    background: rgba(255, 255, 255, 0.1); /* 恢复水晶感觉 */
    backdrop-filter: blur(12px); /* 添加模糊效果 */
    -webkit-backdrop-filter: blur(12px);
    border-radius: 12px;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1); /* 保持阴影效果 */
  }

  .post-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.3);
    background: rgba(255, 255, 255, 0.15); /* 恢复悬停时的水晶效果 */
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .post-card a {
    text-decoration: none;
    color: inherit;
    display: block;
    padding: 1.5rem;
  }

  .post-card h3 {
    font-size: 1.2rem;
    margin-top: 0.85rem;
    color: #ffffff;
    line-height: 1.4;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5); /* 保持文字阴影增强 */
    font-weight: 400; /* 保持字重 */
  }

  .post-excerpt {
    color: #ffffff99;
    margin-bottom: 1.2rem;
    line-height: 1.05;
    font-size: 0.95rem;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  }

  .post-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: #ffffff;
    font-size: 0.85rem;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  }

  /* 类别标签样式 */
  .category-tag {
    background: rgba(255, 255, 255, 0.2); /* 恢复水晶感觉 */
    padding: 0.3rem 0.8rem;
    border-radius: 15px;
    font-size: 0.8rem;
    color: #ffffff;
    margin-left: 0.5rem;
    transition: background 0.2s ease;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.4); /* 增强文字阴影 */
    border: 1px solid rgba(255, 255, 255, 0.15); /* 添加边框 */
  }

  .category-tag:hover {
    background: rgba(255, 255, 255, 0.3);
  }

  .view-more {
    margin-top: 2.5rem;
  }

  .button {
    display: inline-block;
    padding: 0.8rem 2rem;
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    color: #fff;
    text-decoration: none;
    border-radius: 30px;
    font-weight: 500;
    font-size: 1rem;
    transition: all 0.3s ease;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  }

  .button:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
  }

  /* 标签区域 - 恢复水晶感觉 */
  .tag-cloud {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
  }

  .tag {
    background: rgba(255, 255, 255, 0.15); /* 恢复水晶感觉 */
    padding: 0.5rem 1rem;
    border-radius: 20px;
    color: #ffffff; /* 保持文字为纯白色 */
    font-weight: 600; /* 增加字重 */
    font-size: 0.9rem;
    text-decoration: none;
    transition: all 0.3s ease;
    border: 1px solid rgba(255, 255, 255, 0.08); /* 保持透明边框 */
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5); /* 增强文字阴影 */
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2); /* 保持阴影效果 */
    backdrop-filter: blur(10px); /* 添加模糊效果 */
    -webkit-backdrop-filter: blur(10px);
  }

  .tag:hover {
    background: rgba(255, 255, 255, 0.25); /* 恢复悬停时的水晶效果 */
    transform: translateY(-2px);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.25);
    border: 1px solid rgba(255, 255, 255, 0.4); /* 保持悬停时边框更亮 */
  }

  /* 动画 */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* 响应式调整 */
  @media (max-width: 768px) {
    .hero-title {
      font-size: 2.2rem;
    }

    .hero-subtitle {
      font-size: 1.2rem;
    }

    .content-section h2 {
      font-size: 1.8rem;
    }

    .posts-grid {
      grid-template-columns: 1fr;
    }
    
    .content-section {
      padding: 3rem 0;
    }
    
    .glass-container {
      margin: 0 1rem;
      padding: 1.5rem;
    }
  }
  
  @media (max-width: 480px) {
    .hero-title {
      font-size: 1.8rem;
    }
    
    .hero-subtitle {
      font-size: 1rem;
    }
    
    .cta-button {
      padding: 0.7rem 1.3rem;
      font-size: 0.9rem;
    }
    
    .glass-container {
      padding: 1rem;
    }
  }
  
  /* Safari浏览器特殊处理 */
  @supports (-webkit-touch-callout: none) {
    .hero-video {
      position: fixed;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  /* 问题浏览器特殊处理 */
  .hero-overlay.fallback {
    background-position: center center;
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
    opacity: 1;
    width: 100vw;
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  /* 确保在微信等浏览器中图片正确显示 */
  @media screen and (max-width: 768px) {
    .hero-overlay.fallback {
      background-attachment: scroll;
      height: 100%;
      position: fixed;
    }
  }

  .video-loading-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
    text-align: center;
    color: white;
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }
  
  .video-loading-container.visible {
    opacity: 1;
  }
  
  .video-loading-spinner {
    width: 36px;
    height: 36px;
    margin: 0 auto 1rem;
    border: 4px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: white;
    animation: spin 1s ease-in-out infinite;
  }
  
  @keyframes spin {
    to { transform: rotate(360deg); }
  }

  /* 确保所有文字都有足够的阴影 */
  h1, h2, h3, p, a {
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const video = document.querySelector('.hero-video') as HTMLVideoElement;
    const loadingContainer = document.querySelector('.video-loading-container');
    const heroOverlay = document.querySelector('.hero-overlay');
    
    // 检测问题浏览器
    function isProblematicBrowser() {
      const ua = navigator.userAgent.toLowerCase();
      return (
        /micromessenger/i.test(ua) ||       // 微信
        /qq/i.test(ua) ||                   // QQ浏览器
        /ucbrowser/i.test(ua) ||            // UC浏览器
        /alipay/i.test(ua) ||               // 支付宝
        /baiduboxapp/i.test(ua) ||          // 百度浏览器
        /msie|trident|edge/i.test(ua) ||    // IE和早期Edge
        (/safari/i.test(ua) && !/chrome/i.test(ua) && !/firefox/i.test(ua)) // 某些版本的Safari
      );
    }
    
    // 检测视频支持情况
    function checkVideoSupport() {
      // 创建测试视频元素
      const testVideo = document.createElement('video');
      
      // 检测MP4支持
      const mp4Support = testVideo.canPlayType('video/mp4');
      
      // 检测WebM支持
      const webmSupport = testVideo.canPlayType('video/webm');
      
      // 如果两种主要格式都不支持，认为视频不受支持
      return !(mp4Support === '' && webmSupport === '');
    }
    
    // 设置背景图并保持比例
    function setupBackgroundImage(element: HTMLElement | null) {
      if (!element) return;
      
      // 获取图片的宽高比
      const posterImage = new Image();
      posterImage.src = '/banner-poster.jpg';
      posterImage.onload = function() {
        // 使用正确的类型
        const imageRatio = posterImage.width / posterImage.height;
        // element已在最上面检查过null，这里不可能为null
        const el = element as HTMLElement;
        el.style.backgroundImage = "url('/banner-poster.jpg')";
        el.classList.add('fallback');
        
        // 检测设备方向并调整
        function adjustBackground() {
          const windowRatio = window.innerWidth / window.innerHeight;
          if (windowRatio > imageRatio) {
            // 宽屏设备
            el.style.backgroundSize = '100vw auto';
            el.style.backgroundPosition = 'center center';
          } else {
            // 窄屏设备
            el.style.backgroundSize = 'auto 100vh';
            el.style.backgroundPosition = 'center center';
          }
        }
        
        // 初始调整
        adjustBackground();
        
        // 当窗口大小改变时重新调整
        window.addEventListener('resize', adjustBackground);
      };
    }
    
    // 处理视频加载
    function handleVideoLoading() {
      if (video && loadingContainer) {
        // 如果是问题浏览器或不支持视频，直接显示封面图
        if (isProblematicBrowser() || !checkVideoSupport()) {
          if (video) {
            video.style.display = 'none';
          }
          
          // 设置背景图为视频封面
          if (heroOverlay instanceof HTMLElement) {
            setupBackgroundImage(heroOverlay);
          }
          
          // 隐藏加载指示器
          loadingContainer.classList.remove('visible');
          return;
        }
        
        // 添加视频播放错误处理
        video.addEventListener('stalled', () => {
          if (heroOverlay instanceof HTMLElement) {
            setupBackgroundImage(heroOverlay);
          }
        });
        
        // 添加自动重试机制
        video.addEventListener('error', (e) => {
          console.error('视频加载错误:', e);
          
          // 尝试重新加载视频（最多尝试2次）
          let retryCount = parseInt(video.getAttribute('data-retry') || '0');
          if (retryCount < 2) {
            setTimeout(() => {
              video.setAttribute('data-retry', (retryCount + 1).toString());
              video.load();
            }, 1000);
          } else {
            // 显示错误信息
            if (loadingContainer instanceof HTMLElement) {
              loadingContainer.innerHTML = '<p>视频加载失败，请刷新页面重试</p>';
            }
            
            // 显示封面图
            if (heroOverlay instanceof HTMLElement) {
              setupBackgroundImage(heroOverlay);
            }
          }
        });
        
        // 显示加载指示器
        loadingContainer.classList.add('visible');
        
        // 视频可以播放时
        video.addEventListener('canplay', () => {
          // 隐藏加载指示器
          loadingContainer.classList.remove('visible');
          video.classList.add('loaded');
        });
      }
    }
    
    // 初始化
    handleVideoLoading();
  });
</script>
