---
import * as interfaces from '../../lib/interfaces.ts'
import { buildHeadingId } from '../../lib/blog-helpers.ts'
import RichText from './RichText.astro'
import NotionBlocks from '../NotionBlocks.astro'

export interface Props {
  block: interfaces.Block
  headings: interfaces.Block[]
}

const { block, headings } = Astro.props
const id = block.Heading1 ? buildHeadingId(block.Heading1) : ''
---

{block.Heading1 && block.Heading1.IsToggleable ? (
  <details class="toggle">
    <summary>
      <span class="toggle-icon">â–¶</span>
      <h1 id={id} class="heading-link">
        {block.Heading1.RichTexts.map((richText: interfaces.RichText) => (
          <RichText richText={richText} />
        ))}
      </h1>
    </summary>
    <div class="toggle-content">
      {block.Heading1.Children && (
        <NotionBlocks blocks={block.Heading1.Children} headings={headings} isRoot={false} level={2} />
      )}
    </div>
  </details>
) : block.Heading1 ? (
  <h1 id={id} class="heading-link">
    <a href={`#${id}`}>
      {block.Heading1.RichTexts.map((richText: interfaces.RichText) => (
        <RichText richText={richText} />
      ))}
    </a>
  </h1>
) : null}

<style>
  :global(.post-body h1.heading-link),
  :global(body h1.heading-link),
  :global(h1.heading-link) {
    font-size: 1.8rem !important;
    font-weight: var(--font-semibold) !important;
    color: var(--text-color) !important;
    margin: 1.5em 0 0.5em !important;
    line-height: 1.3 !important;
    display: block !important;
    width: 100% !important;
  }
  h1.heading-link a {
    color: inherit;
    text-decoration: none;
  }
  h1.heading-link a:hover {
    color: var(--primary-color);
    text-decoration: none;
  }
  :global(.toggle) {
    margin: 0.25em 0;
  }
  :global(.toggle > summary) {
    cursor: default;
    list-style: none;
    display: flex;
    align-items: center;
    gap: 0.5em;
    /* padding: 0.5em 0; */
  }
  :global(.toggle > summary::-webkit-details-marker) {
    display: none !important;
  }
  :global(.toggle > summary::marker) {
    display: none !important;
  }
  :global(.toggle-icon) {
    display: inline-block;
    font-size: 0.8em;
    color: var(--text-color);
    transition: transform 0.2s;
    user-select: none;
    cursor: pointer;
    line-height: 1;
    flex-shrink: 0;
    align-self: center;
    vertical-align: middle;
  }
  :global(.toggle[open] .toggle-icon) {
    transform: rotate(90deg);
  }
  :global(.toggle > summary h1.heading-link) {
    margin: 0;
    font-size: inherit;
    font-weight: inherit;
    pointer-events: none;
    cursor: default;
    line-height: 1;
    display: flex;
    align-items: center;
    vertical-align: middle;
    position: relative;
    top: -0.3em !important;
  }
  :global(.toggle > summary h1.heading-link a) {
    pointer-events: none;
  }
  :global(.toggle-content) {
    margin-left: 1em;
    /* padding-top: 0.5em; */
    padding-left: 0.5em;
  }
  @media (max-width: 640px) {
    :global(.post-body h1.heading-link) {
      font-size: 1.5rem !important;
    }
    .toggle {
      margin: 1.4rem 0 0;
    }
  }
</style>
