---
import * as interfaces from '../../lib/interfaces.ts'
import { buildHeadingId } from '../../lib/blog-helpers.ts'
import { snakeToKebab } from '../../lib/style-helpers.ts'
import '../../styles/notion-color.css'

export interface Props {
  block: interfaces.Block
  headings: interfaces.Block[]
}

const { block, headings } = Astro.props
---

<div class="table-of-contents">
  {
    headings.map((headingBlock: interfaces.Block) => {
      const heading =
        headingBlock.Heading1 || headingBlock.Heading2 || headingBlock.Heading3

      let indentClass = ''
      if (headingBlock.Type === 'heading_2') {
        indentClass = 'indent-1'
      } else if (headingBlock.Type === 'heading_3') {
        indentClass = 'indent-2'
      }

      // Render anchor for each heading in the table of contents
      return (
        <a
          href={heading ? `#${buildHeadingId(heading)}` : undefined}
          class={`table-of-contents ${snakeToKebab(
            block?.TableOfContents?.Color ?? 'default'
          )} ${indentClass}`}
        >
        >
          {heading?.RichTexts?.map(
            (richText: interfaces.RichText) => richText.PlainText
          ).join('') ?? ''}
          ).join('')}
        </a>
      )
    })
  }
</div>

<style>
  .table-of-contents {
    top: 50px; 
  }
  .table-of-contents > a {
    top: 50px;
    display: block;
    line-height: 1.8rem;
    font-size: 0.9rem;
    font-weight: 500;
    text-decoration: underline;
    background: rgba(249, 249, 249, 0); /* 默认透明背景 */
    transition: background 0.2s ease; /*  添加过渡效果 */
    --indent-size: 1.5rem;
}
  .table-of-contents > a:hover {
    outline: 2px solid rgba(240, 240, 240, 1);
  }
  .table-of-contents > a.indent-1 {
    padding-left: var(--indent-size);
  }
  .table-of-contents > a.indent-2 {
    padding-left: calc(var(--indent-size) * 2);
  }
</style>
